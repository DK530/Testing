import pandas as pd
from statsmodels.tsa.statespace.sarimax import SARIMAX
from datetime import datetime, timedelta

# Load your data
df = pd.read_excel('your_data_file.xlsx')  # Replace 'your_data_file.xlsx' with your actual file path

# Convert 'Date' and 'Hour' into datetime
df['Date'] = pd.to_datetime(df['Date'])
df['Hour'] = pd.to_datetime(df['Hour'], format='%H:%M:%S').dt.time

# Combine 'Date' and 'Hour' into a single datetime column
df['Datetime'] = df.apply(lambda row: datetime.combine(row['Date'], row['Hour']), axis=1)

# Set 'Datetime' as index
df.set_index('Datetime', inplace=True)

# Choose relevant columns
df = df[['Covers', 'Season', 'is_Holiday', 'Special_Event']]

# Create dummy variables for the 'Season' categorical data
df = pd.get_dummies(df, columns=["Season"], prefix=["Season"])

# Fit the model
model = SARIMAX(df['Covers'], exog=df.drop('Covers', axis=1), order=(1, 0, 1), seasonal_order=(1, 0, 1, 12))
model_fit = model.fit(disp=False)

# Now load the future data
future_df = pd.read_excel('future_data_file.xlsx')  # Replace 'future_data_file.xlsx' with your actual file path

# Convert 'Date' and 'Hour' into datetime
future_df['Date'] = pd.to_datetime(future_df['Date'])
future_df['Hour'] = pd.to_datetime(future_df['Hour'], format='%H:%M:%S').dt.time

# Combine 'Date' and 'Hour' into a single datetime column
future_df['Datetime'] = future_df.apply(lambda row: datetime.combine(row['Date'], row['Hour']), axis=1)

# Set 'Datetime' as index
future_df.set_index('Datetime', inplace=True)

# Choose relevant columns and create dummy variables
future_df = future_df[['Season', 'is_Holiday', 'Special_Event']]
future_df = pd.get_dummies(future_df, columns=["Season"], prefix=["Season"])

# Generate 90 days predictions
predictions = model_fit.get_forecast(steps=90, exog=future_df).predicted_mean

print(predictions)
