import pandas as pd
from statsmodels.tsa.statespace.sarimax import SARIMAX
from sklearn.metrics import mean_squared_error
from math import sqrt

# Load the main data
df = pd.read_excel("G:\FP&A\PLANNING\Labor Project\Project - Demetris\Dataset 1.0.xlsx")

# Load the seasonality data
seasonality_df = pd.read_excel("G:\FP&A\PLANNING\Labor Project\Project - Demetris\Seasonality 1.0.xlsx")

# Merge seasonality data
df = df.merge(seasonality_df, how='left', on='Date')

# We need to make sure that the Date is the index of our dataframe for time series analysis
df['Date'] = pd.to_datetime(df['Date'])
df.set_index('Date', inplace=True)

# Prepare exogenous variables
exog = df[['Season', 'Is_Holiday', 'Special_Event']]
exog = pd.get_dummies(exog, drop_first=True)  # one-hot encoding of categorical variables

# Let's predict the 'Covers' column
# Split the dataset into train and test sets
size = int(len(df) * 0.7)
train, test = df.Covers[0:size], df.Covers[size:len(df)]
exog_train, exog_test = exog[0:size], exog[size:len(exog)]

# Fit a SARIMAX model
model = SARIMAX(train, exog=exog_train, order=(1, 1, 1), seasonal_order=(1,1,0,12))
model_fit = model.fit(disp=0)

# Do prediction
start_index = len(train)
end_index = start_index + len(test) - 1
forecast = model_fit.predict(start=start_index, end=end_index, exog=exog_test)

# Calculate RMSE
rmse = sqrt(mean_squared_error(test, forecast))
print('Test RMSE: %.3f' % rmse)
