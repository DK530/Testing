# Import required libraries
import pandas as pd
import numpy as np
from statsmodels.tsa.statespace.sarimax import SARIMAX

# Load the main data
df_main = pd.read_excel("path_to_your_file.xlsx")

# Load the seasonal data
df_season = pd.read_excel("path_to_your_seasonal_file.xlsx")

# Merge the main data with the seasonal data
df = df_main.merge(df_season, on='Date')

# Create dummy variables for the 'Season' categorical data
df = pd.get_dummies(df, columns=["Season"])

# Make sure that Date and Hour are combined into a single datetime column
df['Datetime'] = pd.to_datetime(df['Date']) + pd.to_timedelta(df['Hour'], unit='h')

# Set the datetime column as the index of the dataframe
df.set_index('Datetime', inplace=True)

# Create a series with the target variable 'y'
y = df['y']

# Create a dataframe with the exogenous variables
exog = df.drop(['y', 'Date', 'Hour'], axis=1)

# Split the data into training and test sets
size = int(len(y) * 0.8)
y_train, y_test = y[0:size], y[size:len(y)]
exog_train, exog_test = exog[0:size], exog[size:len(exog)]

# Fit a SARIMAX model
model = SARIMAX(y_train, exog=exog_train, order=(1, 1, 1), seasonal_order=(1,1,0,12))
model_fit = model.fit(disp=0)

# Do prediction
pred = model_fit.predict(start=len(y_train), end=len(y_train)+len(y_test)-1, exog=exog_test)

# Display the results
pred_df = pd.DataFrame({
    'Actual': y_test,
    'Predicted': pred
})
print(pred_df)
